(function(){var d,o;"use strict";var p=Object.defineProperty,l=(s,e,t)=>e in s?p(s,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):s[e]=t,a=(s,e,t)=>(l(s,typeof e!="symbol"?e+"":e,t),t);const r=(d=window.H5P)!=null?d:{},n=(o=window.H5PEditor)!=null?o:{},u=(s,e,t)=>{n[s]=t,n.widgets[e]=t};class m extends r.EventDispatcher{constructor(e,t,i){super(),a(this,"wrapper"),this.params=e,this.contentId=t,this.extras=i,this.wrapper=document.createElement("div")}}class h extends r.EventDispatcher{constructor(e,t,i,c){super(),a(this,"wrapper"),this.parent=e,this.field=t,this.params=i,this.setValue=c,this.wrapper=document.createElement("div")}}class w extends h{appendTo(){const{field:e,params:t,setValue:i}=this;e.type==="text"||console.warn(`The field \`${e.name}\` has the widget \`uuid\` set, but is of type \`${e.type}\`, not \`text\``),!t&&i(e,r.createUUID())}validate(){return!0}remove(){}}u("UUIDWidget","uuid",w)})();
//# sourceMappingURL=h5p-editor-uuid.js.map
